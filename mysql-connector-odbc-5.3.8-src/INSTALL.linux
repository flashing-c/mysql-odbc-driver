+---------------------------------------------------------------------------+
| MySQL Connector/ODBC                                                      |
| Install on Linux platforms                                                |
+---------------------------------------------------------------------------+

INTRODUCTION
-----------------------------------------------------------------------------

This document explains how to install MySQL Connector/ODBC
on Linux platforms


PRE-REQUISITES
-----------------------------------------------------------------------------
 
        The MySQL ODBC Driver 5.3 requires an ODBC driver manager
        to function properly. The recommended ODBC Driver Manager
        is unixODBC version 2.2.14 or newer. Due to incompatible
        changes, older versions of unixODBC are not supported.

        unixODBC can be downloaded from here:

        http://www.unixodbc.org/

        The MySQL ODBC Driver 5.3 provides a GUI Setup
        dialog, which requires GTK+ 2.18.6 or newer to be installed on
        the client.

        NOTE: If run with GTK+3.0, the GUI setup module might print console
              warnings, which are from the GTK+ core and are information 
              on deprecated components or properties. The warnings can be 
              suppressed by discarding the stderr output from the ODBC 
              Administrator utility:

              shell> ODBCManageDatasourcesQ4 2>/dev/null &
             
DISTRIBUTIONS

Each distribution contains the following shared objects:

- libmyodbc5a.so: the ANSI version of Connector/ODBC
- libmyodbc5w.so: the Unicode version of Connector/ODBC
- libmyodbc5s.so (for selected platforms only): the GUI module for creating
  a DSN with a dialogue in unixODBC

Each distribution also includes a utility named myodbc-installer for 
registering Connector/ODBC and creating DSNs. 

The following distributions are available for Linux platforms:

RPM

        This is a typical type of installer for RPM-based Linux platforms, 
        which ensures that the files are copied properly and the driver is
        registered with the ODBC driver manager.

        If you are installing for the first time, run:

        shell> sudo rpm -ivh mysql-connector-odbc-5.3.3.i386.rpm

        If the driver exists, upgrade it with this command:

        shell> sudo rpm -Uvh mysql-connector-odbc-5.3.3.i386.rpm

        NOTE: rpm might display the error message about missing
              libodbc.so.2 or libodbcinst.so.2 files. This can be
              resolved by installing unixODBC 2.3.1 or newer. 
              Alternatively (recommended only as a temporary
              solution), you can execute rpm with the â€“nodeps option and 
              create these symlinks:

                 libodbc.so.2 -> libodbc.so.1
                 libodbcinst.so.2 -> libodbcinst.so.1

        Similarly, if there are any dependency errors for the MySQL client 
        library, libmysqlclient, execute rpm with the --nodeps option, and
        then make sure the MySQL client shared library is in the PATH or a
        path set through LD_LIBRARY_PATH.


        For more details, check the online manual:

        http://dev.mysql.com/doc/connector-odbc/en/connector-odbc-installation-binary-unix-rpm.html
                 
TARBALL (binary)


        1) Extract the files to the desired location using the gunzip and 
           tar utilities:

           shell> gunzip mysql-connector-odbc-5.3.3.i386.tar.gz
           shell> tar -xvf mysql-connector-odbc-5.3.3.i386.tar

        2) Register the drivers using the provided myodbc-installer utility 
           (we recommend using it instead of editing the odbcinst.ini file 
           manually). Run the utility without options to see usage 
           instructions. This is a sample command to register a driver:

           shell> myodbc-installer -d -a -n "MySQL ODBC 5.3 Driver" \         
                                   -t "DRIVER=/usr/lib/libmyodbc5a.so "
        

SOURCE
        1) Extract the source files from the package
        2) Build the source (see the BUILD file for details).
        3) Copy the built drivers to the desired location and register the
           drivers by following step (2) in the instructions above for 
           TARBALL installation.

POST INSTALLATION
-----------------------------------------------------------------------------

Verify Driver Registration

        Run the ODBC Administrator program (ODBCConfig or 
        ODBCManageDataSourcesQ4 for unixODBC) and click [Advanced] to see the 
        installed drivers
        
        Alternatively, you can use myodbc-installer to check:  
        
        shell> myodbc-installer -d -l 
        
        See if the driver is listed in the output. To see detailed 
        information about the driver: 
        
        shell> myodbc-installer -d -l -n "<name of the driver>"

Create a Data Source Name (DSN)

        Data sources can be created with the myodbc-installer utility.
        Run it without options to see usage instructions and examples.

        Alternatively, you can define a data source in the ODBC Administrator,
        if location of the GUI module (libmyodbc5s.so) has been supplied with
        the SETUP parameter when registering the driver (not supported on
        Solaris or Mac OSX):
        
        (1) Go to the 'User DSN' tab and create a new DSN.  You will edit the
            connection information in a MySQL Connector/ODBC DSN window. This 
            window has a 'Test' button for testing your settings.

        (2) Save the DSN and exit the ODBC Administrator. You are now ready
            to use MySQL Connector/ODBC.

UNINSTALL
-----------------------------------------------------------------------------

Prior to uninstalling a driver, all data sources that use the driver should
be removed. It is not possible to remove a data source after its driver has
been uninstalled.

